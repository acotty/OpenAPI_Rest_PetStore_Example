openapi: 3.0.2
servers:
  - url: /
#   - url: /v3
info:
  description: |-
    This is a working Pet Store Server restAPI OpenAPI 3.0 specification.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The original source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  version: 1.0.6-SNAPSHOT-2
  title: SwaggerPetstore-OpenAPI
  license:
    name: Apache 2.0 for OpenAPI yaml file
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'



tags:
  - name: pet
    description: Everything about your Pets
  - name: store
    description: Operations about user
  - name: user
    description: Access to Petstore orders
  - name: address
    description: Operations relating to address
  - name: logmessage
    description: Operations relating to logged messages


paths:
  /pet/{petId}:
    x-exegesis-controller: pet
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: Pet not found
          x-gulp-openapi-code-generator-outcome: notFoundError
        '500':
          x-gulp-openapi-code-generator-outcome: serverError
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '501':
          description: Rest API not supported yet
          x-gulp-openapi-code-generator-outcome: notSupportedError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      description: ''
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of pet that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of pet that needs to be updated
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '405':
          description: Invalid input
          x-gulp-openapi-code-generator-outcome: badInputError
        '500':
          x-gulp-openapi-code-generator-outcome: serverError
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '501':
          description: Rest API not supported yet
          x-gulp-openapi-code-generator-outcome: notSupportedError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      parameters:
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            # application/x-www-form-urlencoded:
            #   schema:
            #     $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid pet value
          x-gulp-openapi-code-generator-outcome: badRequestError
        '500':
          x-gulp-openapi-code-generator-outcome: serverError
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '501':
          description: Rest API not supported yet
          x-gulp-openapi-code-generator-outcome: notSupportedError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user/{userId}:
    x-exegesis-controller: user
    get:
      tags:
        - user
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      #security: # No additional security for this API, so uses global security settings
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            # application/x-www-form-urlencoded:
            #   schema:
            #     $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: User not found
          x-gulp-openapi-code-generator-outcome: notFoundError
        '500':
          x-gulp-openapi-code-generator-outcome: serverError
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '501':
          description: Rest API not supported yet
          x-gulp-openapi-code-generator-outcome: notSupportedError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    User:
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: 'theUser'
        firstName:
          type: string
          example: 'John'
        lastName:
          type: string
          example: 'James'
        email:
          type: string
          example: 'john@email.com'
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          format: int32
          example: 1
          description: User Status
      xml:
        name: user
      type: object

    Pet:
      required:
        - name
        - status
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: 'doggie'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
            - unknown
      xml:
        name: pet
      type: object

    ErrorResponse:
      description: An error has occurred in the system and this object contains information to diagnose the problem.
      required:
        - userMessage
      properties:
        developerMessage:
          description: Message for the developer to use to diagnose the error.
          type: string
        userMessage:
          description: Message for the end user to use to diagnose the error.
          type: string
        moreInfoMessage:
          description: More info message to redirect user to see some web page or document if applicable.
          type: string
        debugMessage:
          description: Error detail. Only returned if service is in diagnostic mode.
          type: string

  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'

