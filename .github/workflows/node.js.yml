name: NodeJS CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  release:
    types: 
      - created
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}

    timeout-minutes: 30   # Just in case something goes realy real realy BAD.....

    strategy:
      fail-fast: false
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        #
        # OS note: "windows-2019" os only support windows containers at the moment. No workarround found!!!
        #
        # save github action minutes -  os: [ubuntu-20.04, macos-10.15]
        # Save github action minutes - node-version: [12.x, 14.x, 16.x]
        #
        node-version: [16.x]
        os:  [ubuntu-20.04]

    steps:
      # - name: Display docker info
      #   run:   |
      #     docker version
      #     docker-compose version
      #     dir "c:\Program Files\Docker\*"
      #     dir "c:\Program Files\Docker\Docker\*"
      #     dir "c:\Program Files\Docker\Docker\DockerCli.exe"
      #     '/C/Program Files/Docker/Docker/DockerCli.exe' -SwitchLinuxEngine
      #     docker version
      #     docker-compose version
      #     dir DockerCli.exe /s

      - name: Checkout GIThub code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile   # will run `yarn install --frozen-lockfile` command

      - name: Lint code 
        run: yarn lint

      - name: Display OS
        shell: bash
        run:   |
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo Linux OS found
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo Windows OS found
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo macOS found
          else
            echo "$RUNNER_OS not supported"
          fi

      - name: Setup Docker on macOS
        uses: docker-practice/actions-setup-docker@master
        with:
          docker_channel: test
          docker_version: "20.10"
          docker_buildx: false
     
      - name: Start MYSQL docker container
        run: docker-compose up -d mysql

      - name: Sleep for 10s
        uses: juliangruber/sleep-action@v1
        with:
          time: 10s

      - name: Start keycloak docker container
        run: docker-compose up -d keycloak
      
      - name: Wait for docker container apps to finish starting
        shell: bash
        run: |
          chmod +x ./WaitKeycloakAppRunning.sh
          ./WaitKeycloakAppRunning.sh

      - name: Run tests against code
        run: yarn test

      - name: Package code
        if: github.event_name == 'release' && github.event.action == 'created'
        run: yarn pack
